{"version":3,"sources":["services/moviesAPI.js","views/MovieDetails.js"],"names":["key","fetchTrending","a","axios","get","then","response","data","results","fetchDetails","filmID","fetchMoviesSearch","query","fetchMovieReview","fetchMovieCast","cast","reviewComponent","lazy","castComponent","MovieDetails","state","title","release_date","vote_average","overview","genres","poster_path","handleGoBack","props","location","history","from","push","this","match","params","movieId","moviesAPI","setState","userScore","releaseYear","slice","className","type","onClick","src","alt","height","map","genre","name","to","url","routes","activeClassName","reviews","fallback","path","component","Component"],"mappings":"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","file":"static/js/8.39757b36.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst key = '5bd6ad96507df17f527e79159d832690';\r\n\r\n//https://api.themoviedb.org/3/movie/615457/reviews?api_key=7ab96e660683d86731a9837125121184\r\n\r\nconst fetchTrending = async () => {\r\n  return await axios\r\n    .get(`https://api.themoviedb.org/3/trending/all/day?api_key=${key}`)\r\n    .then(response => response.data.results);\r\n};\r\n\r\nconst fetchDetails = async filmID => {\r\n  return await axios\r\n    .get(`https://api.themoviedb.org/3/movie/${filmID}?api_key=${key}`)\r\n    .then(response => response.data);\r\n};\r\n\r\nconst fetchMoviesSearch = async query => {\r\n  return await axios\r\n    .get(\r\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${key}`,\r\n    )\r\n    .then(response => response.data.results);\r\n};\r\n\r\nconst fetchMovieReview = async filmID => {\r\n  return await axios\r\n    .get(`https://api.themoviedb.org/3/movie/${filmID}/reviews?api_key=${key}`)\r\n    .then(response => response.data.results);\r\n};\r\n\r\nconst fetchMovieCast = async filmID => {\r\n  return await axios\r\n    .get(`https://api.themoviedb.org/3/movie/${filmID}/credits?api_key=${key}`)\r\n    .then(response => response.data.cast);\r\n};\r\n\r\n//eslint-disable-next-line\r\nexport default {\r\n  fetchTrending,\r\n  fetchDetails,\r\n  fetchMoviesSearch,\r\n  fetchMovieReview,\r\n  fetchMovieCast,\r\n};\r\n","import { Component } from 'react';\r\nimport { Route, NavLink, Switch } from 'react-router-dom';\r\nimport { Suspense, lazy } from 'react';\r\n\r\nimport moviesAPI from '../services/moviesAPI';\r\n//import imagePlacer from '../ImagePlacer.jpg'\r\n\r\n// import MovieReview from '../components/MovieReview';\r\n// import MovieCast from '../components/MovieCast';\r\nimport routes from '../routes';\r\n\r\nconst reviewComponent = lazy(() =>\r\n  import(\r\n    '../components/MovieReview' /*webpackChunkName: \"movie-review-component\" */\r\n  ),\r\n);\r\nconst castComponent = lazy(() =>\r\n  import(\r\n    '../components/MovieCast' /*webpackChunkName: \"movie-cast-component\" */\r\n  ),\r\n);\r\n\r\nconst imagesUrl = 'https://image.tmdb.org/t/p/w500';\r\n\r\nclass MovieDetails extends Component {\r\n  state = {\r\n    title: null,\r\n    release_date: '',\r\n    vote_average: null,\r\n    overview: null,\r\n    genres: [],\r\n    poster_path: null,\r\n  };\r\n  async componentDidMount() {\r\n    const filmID = this.props.match.params.movieId;\r\n    moviesAPI\r\n      .fetchDetails(filmID)\r\n      .then(\r\n        ({\r\n          title,\r\n          release_date,\r\n          vote_average,\r\n          overview,\r\n          genres,\r\n          poster_path,\r\n        }) =>\r\n          this.setState({\r\n            title,\r\n            release_date,\r\n            vote_average,\r\n            overview,\r\n            genres,\r\n            poster_path,\r\n          }),\r\n      );\r\n  }\r\n  handleGoBack = () => {\r\n    const { location, history } = this.props;\r\n    if (location.state && location.state.from) {\r\n      return history.push(location.state.from);\r\n    }\r\n    history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n\r\n    const {\r\n      title,\r\n      release_date,\r\n      vote_average,\r\n      overview,\r\n      genres,\r\n      poster_path,\r\n    } = this.state;\r\n    const userScore = vote_average * 10;\r\n    const releaseYear = release_date.slice(0, 4);\r\n    return (\r\n      <div className=\"movieDetails\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={this.handleGoBack}\r\n          className=\"movieDetails__button\"\r\n        >\r\n          Go Back\r\n        </button>\r\n        <h1 className=\"title\">\r\n          {title} {releaseYear && <span>({releaseYear})</span>}\r\n        </h1>\r\n        <div className=\"movieDetails__description\">\r\n          <div className=\"movieDetails__description--img\">\r\n            {poster_path && (\r\n              <img\r\n                src={`${imagesUrl}${poster_path}`}\r\n                alt={title}\r\n                height=\"400px\"\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"movieDetails__description--text\">\r\n            <p>User Score: {userScore}%</p>\r\n            <h2 className=\"subtitle\">Overview</h2>\r\n            <p>{overview}</p>\r\n            <h2 className=\"subtitle\">Genres</h2>\r\n            <p>\r\n              {genres.map(genre => (\r\n                <span\r\n                  key={genre.name}\r\n                  className=\"movieDetails__description--text-genres\"\r\n                >\r\n                  {genre.name}\r\n                </span>\r\n              ))}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <h2 className=\"subtitle\">Additional information</h2>\r\n\r\n        <NavLink\r\n          to={`${match.url}${routes.cast}`}\r\n          className=\"movieDetails__additional\"\r\n          activeClassName=\"movieDetails__additional--active\"\r\n        >\r\n          {' '}\r\n          Cast\r\n        </NavLink>\r\n        <NavLink\r\n          to={`${match.url}${routes.reviews}`}\r\n          className=\"movieDetails__additional\"\r\n          activeClassName=\"movieDetails__additional--active\"\r\n        >\r\n          {' '}\r\n          Reviews{' '}\r\n        </NavLink>\r\n        <Suspense fallback={<h2>Loading...</h2>}>\r\n          <Switch>\r\n            <Route\r\n              path={`${match.path}${routes.cast}`}\r\n              component={castComponent}\r\n              onClick={this.handleGoBack}\r\n            />\r\n            <Route\r\n              path={`${match.path}${routes.reviews}`}\r\n              component={reviewComponent}\r\n              onClick={this.handleGoBack}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetails;\r\n\r\n// Почему нельзя так??\r\n/* <button onClick={this.props.history.goBack}>Go Back</button> */\r\n"],"sourceRoot":""}